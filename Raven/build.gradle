
plugins {
    id "java"
    id "nu.studer.credentials" version "3.0"
}

group "com.navsys.internav"
version "1.0.0"

ext {
    // The build script needs to know the TAKX installation directory in order to install and clean the plugin jar file.
    takxInstallDir = "C:/Program Files/TAKX" // Default installation directory for Windows
    // takxInstallDir = "/Applications/TAKX" // Default installation directory for Mac
    // takxInstallDir = "/opt/TAKX" // Default installation directory for Linux

    // You can determine your TAKX version by looking at the jars in the load directory of your installation;
    // if the load directory has jars like bootstrap-3.0.1.jar, your TAKX version should be “3.0.1”.
    takxVersion = "3.4.1"

}

repositories {
    maven {
        name "tak-artifactory-repo"
        url "https://artifacts.tak.gov:443/artifactory/maven"
        credentials {
            username = project.credentials.forKey("takRepoUsername")
            password = project.credentials.forKey("takRepoPassword")
        }
    }
    flatDir {
        dirs 'D:/Subversion/TAKX'
    }

    mavenCentral()
}
// Create a special configuration for specifying which dependencies should be included in the plugin jar
configurations {
    includeInJar { transitive = true }
    implementation.extendsFrom includeInJar
}
dependencies {
    // This BOM defines the modules that TAKX can provide at runtime via @LibraryDependency annotations.
    // See the "Libraries Supplied" portion of the JavaDocs for more info.
    implementation platform("gov.takx:platform-bom:$takxVersion")

    // This library defines the TAKX API
    implementation "gov.takx:platform:$takxVersion"

    includeInJar group: 'org.jdom', name: 'jdom2', version: '2.0.6'
    includeInJar group: 'gov.nist.math', name: 'jama', version: '1.0.3'
}

// Instruct Gradle on which version to use for the Gradle wrapper.  For more info on using the Gradle wrapper, see
// https://docs.gradle.org/3.3/userguide/gradle_wrapper.html
wrapper {
    gradleVersion = "7.4.2"
}

// Create an install task to copy the jar to the plugins directory
tasks.create(name: 'install', group: 'Build', description: 'Copy jar to <takxInstallDir>/plugins') {
    dependsOn 'build'

    doLast {
        File takxInstallDirectory = new File("${takxInstallDir}")

        // Avoid creating the plugins directory if it doesn't already exist
        if (takxInstallDirectory.exists()) {
            File dest = new File(takxInstallDirectory, "plugins")

            // Process the archive, if the appropriate task exists on the project
            def archiveTask = tasks.findByName('jar')
            if (archiveTask) {
                File archiveFile = archiveTask.archivePath

                logger.info("Copy $archiveFile to $dest")

                copy {
                    from archiveFile
                    into dest
                }
            }
        } else {
            println "Specified TAKX installation directory does not exist; skipping the jar install!"
        }
    }
}

// Create an uninstall task to delete jar from the plugin directory
tasks.create(name: 'uninstall', group: 'Build', description: 'Delete jar from <takxInstallDir>/plugins') {
    dependsOn 'clean'
    File takxPluginsDir = new File("${takxInstallDir}/plugins")
    delete fileTree(takxPluginsDir) {
        include "${project.name}-${project.version}.jar"
    }
}

// Make sure all jars in the runtime configuration are included in the lib directory
// in the jar that is assembled.
jar {
    into('lib') {
        from configurations.includeInJar
    }
}